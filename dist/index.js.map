{"version":3,"sources":["Helper/isNil.js","Helper/index.js","index.js"],"names":["isNil","value","ApiService","_basePath","_csrfToken","pathError","console","error","csrfError","identifier","fetch","data","user","format","method","credentials","headers","_getHeader","body","JSON","stringify","response","json","Accept"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const isNil = value => value === null || value === undefined;\n\nexport default isNil;\n","import isNil from './isNil'\n\nexport {\n    isNil\n}\n","import { isNil } from './Helper'\n\nexport default class ApiService {\n    constructor(_basePath, _csrfToken) {\n        if (isNil(_basePath)) {\n            const pathError = 'Tried to create API service without a base uri. '\n            pathError += 'Please initialize the API service with a base path '\n            pathError += 'like \"/neos/impersonate/\"'\n            console.error(pathError)\n        }\n        this._basePath = _basePath\n\n        if (isNil(_csrfToken)) {\n            const csrfError = 'Tried to create API service without a CSFR '\n            csrfError += 'token. Please initialize the API service with a token'\n            console.error(csrfError)\n        }\n        this._csrfToken = _csrfToken\n    }\n\n    async callUserChange(identifier) {\n        const data = {\n            user: identifier,\n            format: 'json',\n        }\n        const response = await fetch(this._basePath + 'user-change', {\n            method: 'POST',\n            credentials: 'include',\n            headers: this._getHeader(),\n            body: JSON.stringify(data),\n        })\n\n        return await response.json()\n    }\n\n    async callStatus() {\n        const response = await fetch(this._basePath + 'status', {\n            method: 'GET',\n            credentials: 'include',\n            headers: this._getHeader(),\n        })\n\n        return await response.json()\n    }\n\n    async callRestore() {\n        const response = await fetch(this._basePath + 'restore', {\n            method: 'POST',\n            credentials: 'include',\n            headers: this._getHeader(),\n        })\n\n        return await response.json()\n    }\n\n    _getHeader() {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'X-Flow-Csrftoken': this._csrfToken,\n        }\n    }\n}\n"]}